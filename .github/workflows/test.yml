name: Test on Windows ARM64

on: [push, pull_request]

jobs:
  test-windows-arm64:
    name: Test on Windows ARM64
    runs-on: windows-11-arm

    steps:
      - uses: actions/checkout@v4

      
      - name: Download latest cryptography wheel artifact from build workflow
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $ErrorActionPreference = "Stop"
          $repo = "${{ github.repository }}"
          $artifactName = "cryptography-wheel-arm64"
          $apiUrl = "https://api.github.com/repos/$repo/actions/artifacts"
          $headers = @{ Authorization = "Bearer $env:GH_TOKEN"; "Accept" = "application/vnd.github+json" }
          $artifacts = Invoke-RestMethod -Uri $apiUrl -Headers $headers
          $artifact = $artifacts.artifacts | Where-Object { $_.name -eq $artifactName } | Sort-Object created_at -Descending | Select-Object -First 1
          if (-not $artifact) { throw "Artifact '$artifactName' not found" }
          $downloadUrl = $artifact.archive_download_url
          Invoke-WebRequest -Uri $downloadUrl -Headers $headers -OutFile cryptography-wheel-arm64.zip
          Expand-Archive -Path cryptography-wheel-arm64.zip -DestinationPath wheelhouse

      - name: Download latest pynacl wheel artifact from build workflow
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $ErrorActionPreference = "Stop"
          $repo = "${{ github.repository }}"
          $artifactName = "pynacl-wheel-arm64"
          $apiUrl = "https://api.github.com/repos/$repo/actions/artifacts"
          $headers = @{ Authorization = "Bearer $env:GH_TOKEN"; "Accept" = "application/vnd.github+json" }
          $artifacts = Invoke-RestMethod -Uri $apiUrl -Headers $headers
          $artifact = $artifacts.artifacts | Where-Object { $_.name -eq $artifactName } | Sort-Object created_at -Descending | Select-Object -First 1
          if (-not $artifact) { throw "Artifact '$artifactName' not found" }
          $downloadUrl = $artifact.archive_download_url
          Invoke-WebRequest -Uri $downloadUrl -Headers $headers -OutFile pynacl-wheel-arm64.zip
          Expand-Archive -Path pynacl-wheel-arm64.zip -DestinationPath wheelhouse

      - name: List files in wheelhouse before install
        run: |
          dir wheelhouse

      - name: Download and extract ARM64 wheels pack (Gohlke)
        run: |
          Invoke-WebRequest -Uri "https://github.com/cgohlke/win_arm64-wheels/releases/download/v2025.3.31/2025.3.31-experimental-cp313-win_arm64.whl.zip" -OutFile wheels-arm64.zip
          Expand-Archive -Path wheels-arm64.zip -DestinationPath wheels-arm64

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: List all files in wheels-arm64 recursively
        run: |
          Get-ChildItem -Path wheels-arm64 -Recurse

      - name: Install ARM64 wheels from pack
        run: |
          pip install wheels-arm64/2025.3.31-experimental-cp313-win_arm64.whl/bcrypt-4.3.0-cp313-cp313-win_arm64.whl
          pip install wheels-arm64/2025.3.31-experimental-cp313-win_arm64.whl/cffi-1.17.1-cp313-cp313-win_arm64.whl
          pip install wheels-arm64/2025.3.31-experimental-cp313-win_arm64.whl/greenlet-3.1.1-cp313-cp313-win_arm64.whl
          pip install wheels-arm64/2025.3.31-experimental-cp313-win_arm64.whl/numpy-2.2.4-cp313-cp313-win_arm64.whl
          pip install wheels-arm64/2025.3.31-experimental-cp313-win_arm64.whl/pandas-2.2.3-cp313-cp313-win_arm64.whl
          pip install wheels-arm64/2025.3.31-experimental-cp313-win_arm64.whl/pyodbc-5.2.0-cp313-cp313-win_arm64.whl
          pip install wheels-arm64/2025.3.31-experimental-cp313-win_arm64.whl/SQLAlchemy-2.0.40-cp313-cp313-win_arm64.whl

      - name: Install cryptography wheel and other dependencies
        run: |
          pip install --upgrade pip
          pip install $(Resolve-Path wheelhouse/cryptography*.whl)
          pip install $(Resolve-Path wheelhouse/PyNaCl*.whl)
          if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Compile Cython code
        run: |
          python src/setup.py build_ext --inplace

      - name: Run Pytest
        run: |
          pytest tests/

      - name: List files in /build
        run: |
          dir /build
