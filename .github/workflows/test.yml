name: Build and Test on Windows ARM64

on: [push, pull_request]

jobs:
  build-cryptography-arm64:
    name: Build cryptography wheel for Windows ARM64
    runs-on: windows-latest  # Usa runner x64 para cross-compilar

    steps:
      - name: Checkout cryptography source
        uses: actions/checkout@v4
        with:
          repository: pyca/cryptography
          ref: '45.0.3'

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Set up Rust with ARM64 target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-pc-windows-msvc
          components: rust-src

      - name: Install cargo-xwin for cross-compilation
        run: cargo install cargo-xwin

      - name: Install maturin
        run: pip install maturin

      - name: Build cryptography wheel
        run: |
          maturin build --release --target aarch64-pc-windows-msvc --out dist -i python3.13
        env:
          MATURIN_USE_XWIN: "1"
          RUSTFLAGS: "-Ctarget-feature=+crt-static"

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: cryptography-wheel-arm64
          path: dist/*.whl

  test-windows-arm64:
    name: Test on Windows ARM64
    needs: build-cryptography-arm64
    runs-on: windows-11-arm

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Download built wheels
        uses: actions/download-artifact@v4
        with:
          name: cryptography-wheel-arm64
          path: ./wheelhouse

      - name: Install cryptography wheel and other dependencies
        run: |
          pip install --upgrade pip
          pip install wheelhouse/cryptography*.whl
          if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Compile Cython code
        run: |
          python src/setup.py build_ext --inplace

      - name: Run Pytest
        run: |
          pytest tests/

      - name: List files in /build
        run: |
          dir /build
