name: Build Cryptography on Windows ARM64

on: [workflow_dispatch]

jobs:
  build-cryptography-arm64:
    name: Build cryptography wheel for Windows ARM64
    runs-on: windows-latest  # Usa runner x64 para cross-compilar

    steps:
      - name: Checkout cryptography source
        uses: actions/checkout@v4
        with:
          repository: pyca/cryptography
          ref: '45.0.3'

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Set up Rust with ARM64 target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-pc-windows-msvc
          components: rust-src

      - name: Install cargo-xwin for cross-compilation
        run: cargo install cargo-xwin

      - name: Install maturin
        run: pip install maturin

      - name: Install cffi (requerido para build)
        run: pip install cffi

      - name: Install setuptools (requerido para build)
        run: pip install setuptools

      - name: Download WinUniversal OpenSSL v3.5.0 installer
        run: |
          Invoke-WebRequest -Uri "https://slproweb.com/download/WinUniversalOpenSSL-3_5_0.exe" -OutFile $env:RUNNER_TEMP\WinUniversalOpenSSL-3_5_0.exe

      - name: Install WinUniversal OpenSSL v3.5.0 (silent)
        run: |
          Start-Process -FilePath $env:RUNNER_TEMP\WinUniversalOpenSSL-3_5_0.exe -ArgumentList "/silent", "/verysilent", "/sp-", "/suppressmsgboxes", "/DIR=C:\OpenSSL-Universal" -Wait

      - name: Download Python 3.13 ARM64 dev libraries
        run: |
          Invoke-WebRequest -Uri "https://www.nuget.org/api/v2/package/pythonarm64/3.13.3" -OutFile python-arm64.zip
          Expand-Archive -Path python-arm64.zip -DestinationPath $env:RUNNER_TEMP\python-arm64

      - name: Build cryptography wheel
        run: |
          $env:LIB="$env:RUNNER_TEMP\python-arm64\tools\libs;C:\OpenSSL-Universal\lib\VC\arm64\MT;$env:LIB"
          maturin build --release --target aarch64-pc-windows-msvc --out dist -i python3.13
        env:
          MATURIN_USE_XWIN: "1"
          RUSTFLAGS: "-Ctarget-feature=+crt-static"
          OPENSSL_DIR: C:\OpenSSL-Universal
          OPENSSL_LIB_DIR: C:\OpenSSL-Universal\lib\VC\arm64\MT
          OPENSSL_INCLUDE_DIR: C:\OpenSSL-Universal\include\arm64

      - name: List built wheels and show wheel filename
        run: |
          dir dist

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: cryptography-wheel-arm64
          path: dist/*.whl
