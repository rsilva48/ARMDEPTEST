name: Build and Test Cryptography Wheel for Windows ARM64

on:
  workflow_dispatch:

jobs:
  build-cryptography-wheel:
    name: Build cryptography wheel for Windows ARM64
    runs-on: windows-latest

    steps:
      - name: Checkout cryptography repo
        uses: actions/checkout@v4
        with:
          repository: pyca/cryptography
          ref: '45.0.3'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install build dependencies
        run: |
          pip install cibuildwheel
          pip install setuptools-rust

      - name: Build Windows ARM64 wheel using cibuildwheel
        run: cibuildwheel --platform windows
        env:
          CIBW_ARCHS: ARM64
          CIBW_BUILD: "cp313-*"
          CIBW_ENVIRONMENT: MATURIN_INTERPRETER=python3.13 PIP_NO_BUILD_ISOLATION=1

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: cryptography-wheel-windows-arm64
          path: wheelhouse/*.whl

  test-cryptography-wheel:
    name: Test built wheel on Windows 11 ARM64
    runs-on: windows-11-arm
    needs: build-cryptography-wheel

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Download built wheel
        uses: actions/download-artifact@v4
        with:
          name: cryptography-wheel-windows-arm64
          path: ./dist

      - name: Install wheel and dependencies
        run: |
          pip install --upgrade pip
          pip install ./dist/cryptography*.whl
          pip install cython pytest
          if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Compile Cython code
        run: |
          python src/setup.py build_ext --inplace

      - name: Run Pytest
        run: |
          pytest tests/

      - name: List files in /build
        run: |
          dir /build

      - name: Verify Cryptography installation
        run: python -c "import cryptography; print(cryptography.__version__)"
